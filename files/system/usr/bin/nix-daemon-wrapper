#!/usr/bin/env bash

set -euo pipefail

# Create runtime symlink for hardcoded paths
mkdir -p /run/nix
ln -sf /var/lib/nix/store /run/nix/store

# Find the actual nix binary dynamically at runtime
NIX_BINARY=$(find /var/lib/nix/store -name "nix" -type f -executable 2>/dev/null | head -1)
if [ -z "$NIX_BINARY" ]; then
    echo "ERROR: Could not find nix binary in /var/lib/nix/store" >&2
    exit 1
fi

echo "Found nix binary at: $NIX_BINARY" >&2

# Convert to symlink path to avoid glibc conflicts
SYMLINK_BINARY="/run/nix/store/$(echo "$NIX_BINARY" | sed 's|/var/lib/nix/store/||')"
echo "Using symlink path: $SYMLINK_BINARY" >&2

# Build comprehensive library path with Nix libraries first
NIX_LIB_DIRS=$(find /var/lib/nix/store -name "lib" -type d 2>/dev/null | grep -E "(nix-)" | tr '\n' ':' 2>/dev/null || echo "")
OTHER_LIB_DIRS=$(find /var/lib/nix/store -name "lib" -type d 2>/dev/null | grep -v -E "(glibc|gcc|binutils|gcc-wrapper|glibc-|libc6)" | tr '\n' ':' 2>/dev/null || echo "")

COMBINED_LIBS="${NIX_LIB_DIRS}${OTHER_LIB_DIRS}"
export LD_LIBRARY_PATH="${COMBINED_LIBS%:}"

echo "LD_LIBRARY_PATH configured with $(echo "$LD_LIBRARY_PATH" | tr ':' '\n' | wc -l) library directories" >&2

# Set up Nix environment
export NIX_STORE_DIR="/run/nix/store"
export NIX_STATE_DIR="/var/lib/nix"
export NIX_LOG_DIR="/var/lib/nix/log"
export NIX_CONF_DIR="/var/lib/nix/conf"
export NIX_DAEMON_SOCKET_PATH="/var/lib/nix/daemon-socket/socket"

# Ensure socket directory exists
mkdir -p /var/lib/nix/daemon-socket

echo "Starting nix daemon..." >&2
exec "$SYMLINK_BINARY" --extra-experimental-features nix-command --extra-experimental-features flakes daemon "$@"
